import pandas as pd

# Load dataset
df = pd.read_csv("sales_data.csv", parse_dates=["date"])

# Display the first few rows
print(df.head())

# Prophet requires columns: 'ds' (date), 'y' (value)
df_prophet = df.rename(columns={"date": "ds", "sales": "y"})

# Ensure data is sorted by date
df_prophet = df_prophet.sort_values("ds")
ðŸ”¹ 3. Time Series Forecasting using Prophet
python
Copy code
from prophet import Prophet

# Initialize model
model = Prophet(daily_seasonality=True)  # or weekly/monthly depending on your data

# Fit model
model.fit(df_prophet)

# Make future dataframe (e.g., 90 days into the future)
future = model.make_future_dataframe(periods=90)

# Forecast
forecast = model.predict(future)
ðŸ”¹ 4. Plot Forecast Results
python
Copy code
import matplotlib.pyplot as plt

# Plot full forecast
fig1 = model.plot(forecast)
plt.title("Sales Forecast")
plt.xlabel("Date")
plt.ylabel("Sales")
plt.tight_layout()
plt.show()

# Plot forecast components: trend, seasonality, etc.
fig2 = model.plot_components(forecast)
plt.tight_layout()
plt.show()
# Merge actual and forecasted values for Power BI use
forecast_output = forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']]
merged = pd.merge(df_prophet, forecast_output, on='ds', how='outer')

# Save to CSV
merged.to_csv("sales_forecast_output.csv", index=False)